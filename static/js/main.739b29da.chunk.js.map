{"version":3,"sources":["Pages/Home/Home.tsx","Pages/About/About.tsx","components/Nav/Nav.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","About","Nav","props","setAppPage","bind","className","onClick","Component","App","state","homePage","aboutPage","name","this","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","ReactDOM","render"],"mappings":"kRAMeA,MANf,WACI,OAAS,8BACL,yCCIOC,MANf,WACI,OAAS,8BACL,0CC8BOC,G,MArBf,kDAEI,WAAYC,GAAyB,IAAD,8BAChC,cAAMA,IACDA,MAAMC,WAAWC,KAAtB,gBAFgC,EAFxC,0CAOI,WAAU,IAAD,OAEL,OACI,sBAAKC,UAAU,oBAAf,UACJ,wBAAQC,QAAS,kBAAM,EAAKJ,MAAMC,WAAW,cAA7C,kBACA,wBAAQG,QAAS,kBAAM,EAAKJ,MAAMC,WAAW,eAA7C,0BAZR,GAAyBI,cC+CVC,E,kDA3Cb,WAAYN,GAAwB,IAAD,8BACjC,cAAMA,IACDO,MAAQ,CACXC,UAAU,EACVC,WAAW,GAEb,EAAKR,WAAa,EAAKA,WAAWC,KAAhB,gBANe,E,8CASnC,SAAWQ,GAGT,OAFAC,KAAKC,SAAS,CAAEJ,UAAU,IAC1BG,KAAKC,SAAS,CAAEH,WAAW,IACnBC,GACN,IAAK,YACHC,KAAKC,SAAS,CAAEJ,UAAU,IAC1B,MACF,IAAK,aACHG,KAAKC,SAAS,CAAEH,WAAW,O,oBAOjC,WACE,MAAgCE,KAAKJ,MAA7BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,UAElB,OACE,qBAAKN,UAAU,WAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,cAAC,EAAD,CAAKF,WAAYU,KAAKV,eAExB,sBAAKE,UAAU,oBAAf,UACGK,GAAY,cAAC,EAAD,IACZC,GAAa,cAAC,EAAD,gB,GApCRJ,aCAHQ,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJRQ,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACT,cAAC,EAAD,IACAJ,GAMAT,M","file":"static/js/main.739b29da.chunk.js","sourcesContent":["function Home() {\r\n    return ( <div> \r\n        <h1>Home</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;","function About() {\r\n    return ( <div> \r\n        <h1>About</h1>\r\n        </div>\r\n    );\r\n}\r\nexport default About;","import { Component } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\ntype NavProperities = {\r\n    setAppPage : (page : string)=>void;\r\n};\r\n\r\ntype NavStates = {\r\n\r\n};\r\n\r\nexport class Nav extends Component<NavProperities,NavStates>{\r\n\r\n    constructor(props : NavProperities) {\r\n        super(props);\r\n        this.props.setAppPage.bind(this);\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <nav className='react-example-nav'>\r\n        <button onClick={() => this.props.setAppPage(\"home-page\")}>Home</button>\r\n        <button onClick={() => this.props.setAppPage(\"about-page\")}>About</button>\r\n\r\n            </nav>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Nav;","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Pages/Home/Home\";\nimport About from \"./Pages/About/About\";\nimport Nav from \"./components/Nav/Nav\";\n\ninterface AppProperties {}\n\ninterface AppStates {\n  homePage: boolean;\n  aboutPage: boolean;\n}\n\nclass App extends Component<AppProperties, AppStates> {\n  constructor(props : AppProperties) {\n    super(props);\n    this.state = {\n      homePage: true,\n      aboutPage: false,\n    };\n    this.setAppPage = this.setAppPage.bind(this);\n  }\n\n  setAppPage(name: string) {\n    this.setState({ homePage: false });\n    this.setState({ aboutPage: false });\n    switch (name) {\n      case \"home-page\":\n        this.setState({ homePage: true });\n        break;\n      case \"about-page\":\n        this.setState({ aboutPage: true });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    const { homePage, aboutPage } = this.state;\n\n    return (\n      <div className=\"app-main\">\n        <div className=\"meta-grid\">\n          <div className=\"meta-grid-nav\">\n            <Nav setAppPage={this.setAppPage} />\n          </div>\n          <div className=\"meta-grid-content\">\n            {homePage && <Home />}\n            {aboutPage && <About />}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n<App/>,\nrootElement\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}